// import { useState, useRef, MouseEvent } from "react";
// import {
//   motion,
//   useMotionValue,
//   useSpring,
//   useAnimate,
//   Spring,
// } from "framer-motion";

// const ListItems = () => {
//   const [isHover, setIsHover] = useState < boolean > false;
//   const [hoverItemId, setHoverItemId] = (useState < number) | (null > null);
//   const parentElRef = (useRef < HTMLUListElement) | (null > null);
//   const [scope, animate] = useAnimate();

//   const items = ["forest", "river", "moutain"];
//   const springConfig: Spring = {
//     type: "spring",
//     stiffness: 100,
//     damping: 20,
//   };
//   const spanEl = {
//     x: useMotionValue(0),
//     y: useMotionValue(0),
//   };

//   const springs = {
//     x: useSpring(spanEl.x, springConfig),
//     y: useSpring(spanEl.y, springConfig),
//   };

//   const handleMouseMove = ({ currentTarget, clientX, clientY }: MouseEvent) => {
//     if (hoverItemId != null) {
//       const activeItem = currentTarget.children[hoverItemId];
//       const { top, left, height, width } = activeItem.getBoundingClientRect();
//       const mouseX = clientX - (left + width / 2);
//       const mouseY = clientY - (top + height / 2);
//       spanEl.x.set(mouseX * 0.3 * -1);
//       spanEl.y.set(mouseY * 0.3 * -1);
//     }
//   };

//   const handleMouseEnter = ({ currentTarget }: MouseEvent) => {
//     if (currentTarget) {
//       const elIndex = currentTarget.getAttribute("data-index");
//       setHoverItemId(Number(elIndex));
//     }
//   };

//   const handleMouseLeave = () => {
//     setHoverItemId(null);
//     setIsHover(false);
//   };
//   console.log(scope);

//   return (
//     <ul
//       ref={scope}
//       className="flex flex-col text-4xl uppercase select-none"
//       onMouseMove={handleMouseMove}
//       onMouseLeave={handleMouseLeave}
//     >
//       {items.map((item, index) => (
//         <motion.li
//           key={item + index}
//           initial={{ color: "blue" }}
//           whileHover={{ color: "red" }}
//           data-index={index}
//           className="relative p-2 border border-white"
//           onMouseEnter={handleMouseEnter}
//         >
//           {item}
//           <motion.span
//             className="absolute w-5 h-5 bg-white"
//             // initial={{ scale: 1 }}
//             // whileHover={{ color: "red" }}
//             // transition={{ duratin: 0.3 }}
//             style={{
//               translateX: hoverItemId === index ? springs.x : 0,
//               translateY: hoverItemId === index ? springs.y : 0,
//               scale: hoverItemId === index ? 1 : 0,
//             }}
//             // animate={{ x: hoverItemId === index ? springs.x : 0 }}
//           ></motion.span>
//         </motion.li>
//       ))}
//     </ul>
//   );
// };

// export default ListItems;
